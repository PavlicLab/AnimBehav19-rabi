{
    "collab_server" : "",
    "contents" : "\ninstall.packages(devtools)\nlibrary(devtools)\ndocument()\nbuild()\ninstall()\nlibrary(rabi)\n?how_many\n\nreed<-(reed_solomon(3,1,3))\ndim(reed)\nhead(reed)\nreedA<-split(reed, 1:nrow(reed))\ntable(unlist(seq_distmatrix(reedA,reedA, method=\"hamming\")))\n\n\nreed_solomon(5,2,7)->a\ndo.call(\"cbind\",a)->b\nt(b)->b\nb[which(b[,1]>=b[,2] & b[,3]>=b[,4]),]->b\n\n\nrobuster <- function(mat){\n  table(unlist(stringdist::seq_distmatrix(mat,mat,method = \"hamming\")))\n}\n\n\nalph=5\nlength=4\nredund=1\nmess=3\nlengtho<-4\nalpho<-7\nredo<-2\n\ndim(reed_solomon(lengtho,redo,alpho))[1]\n#df.temp<-df[1,]\n\n\ndf<-gtools::permutations(alpho, lengtho, repeats.allowed = TRUE)-1\n\n#\nfor (i in 1:10) {\n  invisible(tester(redo))\n}\n\ntester<-function(redo){\n  dfA<-split(df, 1:nrow(df))\n  x<-sample(1:length(dfA),1)\n  df.temp<-dfA[x]\n  names(df.temp)<-NULL\n  #print(paste0(\"length of dfA: \",length(dfA),\"////// new length of dfA: \",length(dfA[seq_distmatrix(dfA,df.temp, method=\"hamming\")[,length(df.temp)]>1])))\n  dfA<-dfA[seq_distmatrix(dfA,df.temp, method=\"hamming\")[,length(df.temp)]>redo]\n  names(dfA)<-1:length(dfA)\n  \n  while (length(dfA)>0){\n    x<-sample(1:length(dfA),1)\n    df.temp[length(df.temp)+1]<-(dfA[x])\n    #print(paste0(\"length of dfA: \",length(dfA),\"////// new length of dfA: \",length(dfA[seq_distmatrix(dfA,df.temp, method=\"hamming\")[,length(df.temp)]>1])))\n    dfA<-dfA[seq_distmatrix(dfA,df.temp, method=\"hamming\")[,length(df.temp)]>redo]\n    if(length(dfA)!=0 ){\n      names(dfA)<-1:length(dfA)\n    }\n  }\n  #print(length(df.temp))\n  #table(unlist(seq_distmatrix(df.temp,df.temp,method=\"hamming\")))\n  return(df.temp)\n}\n\nta.tester<-function(redo, num){\n  temp1<-NULL\n  temp2<-0\n  for (i in 1:num) {\n    temp1 <- invisible(tester(redo))\n    if (length(temp1)>length(temp2)) temp2<-temp1\n  }\n  return(temp2)\n  \n}\n  \nta.tester(redo,100)\n\n\n\ndo.call(rbind,df.temp)\n\n\nhow.many <- function(dots,paints){\n  df <- permutations(paints, dots-1, repeats.allowed = TRUE) %>% as.data.frame()\n  df <- df-1\n  df %>%\n    mutate(mod = paints - (rowSums(.[1:(dots-1)]) %% paints)) -> df\n  #df$mod <- df$mod-1\n  df[df==paints]<-0\n  df %>%\n    mutate(sum = rowSums(.[1:dots])) -> df\n  print(dim(df)[1])\n  #return(df)\n}\n\n\n```{r}\nfor (i in 0:6) { \n  for (j in 0:6){\n    print(dim(codes[which((codes[,1] == i | codes[,2] == i) & (codes[,3]==j | codes[,4]==j)), ])[1])\n  }\n}\nhead(codes, n = 10L)\n#to turn it back into a list...\ncodes <- split(codes, 1:nrow(codes))\nnames(codes) <- NULL\n```\n```{r, echo=FALSE}\ncodes <- t(do.call(\"cbind\",codes))\nknitr::kable(head(codes, n = 10L), col.names = c(\"{1}\",\"{2}\",\"{3}\",\"{4}\",\"{5}\"), align = \"c\", caption = \"ID sequences in the new, tweaked list\")\n\n```\n",
    "created" : 1506104856894.000,
    "dirty" : false,
    "encoding" : "",
    "folds" : "46|23|67|0|\n69|31|78|0|\n",
    "hash" : "2033573770",
    "id" : "C0F068C4",
    "lastKnownWriteTime" : 30399761348100200,
    "last_content_update" : 1507685934784,
    "path" : null,
    "project_path" : null,
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 7,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}