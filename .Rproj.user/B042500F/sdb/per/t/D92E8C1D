{
    "collab_server" : "",
    "contents" : "#' Converting numeric ID codes to listed color name codes\n#'\n#' This is a helper function\n#'\n#'\n#' @param total_length the number of unique positions to be marked on your animal. (This can be thought of as the total number of positions on which color bands or paint marks will be applied.)\n#' @param redundancy the number of erasures that can occur without disrupting unique identification. This determines how robust the scheme is.\n#' @param alphabet an integer representing the 'alphabet size.' This is the number of unique marks (think different paint colors or varieties of bands) at your disposal. Note: unlike the Reed-Solomon inspired function, \\code{\\link{reed_solomon}}, this function can take non-prime values.\n#' @param num.tries the number of iterations that will be run before choosing the best option. Increasing this number increases the running time.\n#'\n#' @return a list of unique color codes that fit the provided parameters.\n#' @note HEY THIS IS A NOTE\n#' @author Andrew Burchill, \\email{andrew.burchill@asu.edu}\n#' @references \\url{http://DOI OF THE PAPER} for the orginal source\n#' @seealso \\code{\\link{birdtag}} for an example extension based on leg-banding birds,\n#' @keywords reed_solomon\n#'\n#' @examples\n#' plot_crayons()\n#'\n#' @export\n#' @importFrom stringdist seq_distmatrix\n\n\n\ncodes_to_colors <- function(codes, available.colors = NULL){\n  if (!is.null(available.colors)) {\n    original.nums <- unique(unlist(codes))\n    if (length(available.colors) != length(original.nums) | length(available.colors) != length(unique(available.colors))) {\n      warning(paste0(\"Error: the supplied list of color names must contain exactly \", length(original.nums), \" unique elements. Returning the original numeric codes instead.\" ))\n    } else {\n      for (i in 1:length(available.colors)) {\n        codes <- rapply(codes, function(x) ifelse(x == original.nums[i],available.colors[i], x), how = \"replace\")\n      }\n      mapping <- setNames(available.colors, original.nums)\n      mapping <- mapping[order(unlist(mapping), decreasing = TRUE)]\n      message(\"Note: The mapping (see below) that was used to assign color names to numeric values is not saved or assigned to a variable. The exact mapping may change with repeated function calls. Depending on your circumstances, you may want to record this now. \\n\\n\")\n      print.table(mapping)\n    }\n  }\n  return(codes)\n}\n",
    "created" : 1507154740227.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3462247579",
    "id" : "D92E8C1D",
    "lastKnownWriteTime" : 1507851911,
    "last_content_update" : 1507852784517,
    "path" : "~/R sandbox/color_code_package/rabi/R/codestocolors.R",
    "project_path" : "R/codestocolors.R",
    "properties" : {
        "tempName" : "Untitled3"
    },
    "relative_order" : 11,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}